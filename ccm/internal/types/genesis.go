/*
 * Copyright (C) 2020 The poly network Authors
 * This file is part of The poly network library.
 *
 * The  poly network  is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The  poly network  is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License
 * along with The poly network .  If not, see <http://www.gnu.org/licenses/>.
 */

package types

import (
	"fmt"

	sdk "github.com/cosmos/cosmos-sdk/types"
)

// GenesisState - ccm state
type GenesisState struct {
	Params           Params            `json:"params" yaml:"params"`                         // For storing polychain ID.
	CreatedTxCount   sdk.Int           `json:"created_tx_count" yaml:"created_tx_count"`     // An auto-incrementing count of x-chain txs generated by this chain. Used as a nonce / ID unique to this chain.
	CreatedTxDetails map[string][]byte `json:"created_tx_details" yaml:"created_tx_details"` // Details of cross chain tx generated by this chain.
	ReceivedTxIDs    map[string][]byte `json:"received_tx_ids" yaml:"received_tx_ids"`       // The cross chain tx IDs (issued by a sending chain) that has been processed by this chain.
	DenomCreators    map[string]string `json:"denom_creators" yaml:"denom_creators"`         // Denom to creator mapping.
}

// NewGenesisState creates a new GenesisState object
func NewGenesisState(params Params, count sdk.Int, details, txIDs map[string][]byte, denomCreators map[string]string) GenesisState {
	return GenesisState{
		Params:           params,
		CreatedTxCount:   count,
		CreatedTxDetails: details,
		ReceivedTxIDs:    txIDs,
		DenomCreators:    denomCreators,
	}
}

// DefaultGenesisState creates a default GenesisState object
func DefaultGenesisState() GenesisState {
	return GenesisState{
		Params:           DefaultParams(),
		CreatedTxCount:   sdk.ZeroInt(),
		CreatedTxDetails: make(map[string][]byte),
		ReceivedTxIDs:    make(map[string][]byte),
		DenomCreators:    make(map[string]string),
	}
}

// ValidateGenesis validates the provided genesis state to ensure the
// expected invariants holds.
func ValidateGenesis(data GenesisState) error {
	if err := data.Params.Validate(); err != nil {
		return err
	}

	if !data.CreatedTxCount.Equal(sdk.NewInt(int64(len(data.CreatedTxDetails)))) {
		return fmt.Errorf("number of CreatedTxDetails should match CreatedTxCount in ccm genesis, is %d but expected %s", len(data.CreatedTxDetails), data.CreatedTxCount.String())
	}

	return nil
}
